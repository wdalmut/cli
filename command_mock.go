// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/wdalmut/cli (interfaces: Command)

package cli

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of Command interface
type MockCommand struct {
	ctrl     *gomock.Controller
	recorder *_MockCommandRecorder
}

// Recorder for MockCommand (not exported)
type _MockCommandRecorder struct {
	mock *MockCommand
}

func NewMockCommand(ctrl *gomock.Controller) *MockCommand {
	mock := &MockCommand{ctrl: ctrl}
	mock.recorder = &_MockCommandRecorder{mock}
	return mock
}

func (_m *MockCommand) EXPECT() *_MockCommandRecorder {
	return _m.recorder
}

func (_m *MockCommand) Help() string {
	ret := _m.ctrl.Call(_m, "Help")
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockCommandRecorder) Help() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Help")
}

func (_m *MockCommand) Run(_param0 []string) int {
	ret := _m.ctrl.Call(_m, "Run", _param0)
	ret0, _ := ret[0].(int)
	return ret0
}

func (_mr *_MockCommandRecorder) Run(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Run", arg0)
}

func (_m *MockCommand) Synopsis() string {
	ret := _m.ctrl.Call(_m, "Synopsis")
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockCommandRecorder) Synopsis() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Synopsis")
}
